# ######################################################################
#
# HAL file for BeagleBone + BeBoPr cape with 4 steppers
#
# Derived from example hm2-stepper config
#
# ######################################################################

# Launch the setup script to make sure hardware setup looks good
loadusr -w ./setup.bridge.sh


# ######################################################################
# Core EMC/HAL Loads
# ######################################################################

# kinematics
loadrt trivkins

# motion controller, get name and thread periods from ini file
# trajectory planner
loadrt tp
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES tp=tp kins=trivkins


# load low-level drivers
loadrt hal_bb_gpio output_pins=916,914,819,813 input_pins=911,913,915,817,923,925,927,926,924,826,912,815,942,818,922,921
loadrt [PRUCONF](DRIVER) prucode=$(HAL_RTMOD_DIR)/[PRUCONF](PRUBIN) [PRUCONF](CONFIG) halname=hpg
#loadrt pid names=spindle
loadrt limit1 count=2


# Python user-mode HAL module to read ADC value and generate a thermostat output for PWM
# c = analog input channel and thermistor table
# loadusr -Wn Therm hal_temp_bbb -n Therm -c 04:epcos_B57560G1104,05:epcos_B57560G1104 -b CRAMPS

# ######################################################################
# THREADS
# ######################################################################

addf  hpg.capture-position                 servo-thread
addf  bb_gpio.read                         servo-thread
addf  motion-command-handler               servo-thread
addf  motion-controller                    servo-thread
#addf pid.0.do-pid-calcs                  servo-thread
#addf pid.1.do-pid-calcs                  servo-thread
addf  limit1.0                             servo-thread
addf  limit1.1                             servo-thread
addf  hpg.update                           servo-thread
addf  bb_gpio.write                        servo-thread


# ######################################################################
# Axis-of-motion Specific Configs (not the GUI)
# ######################################################################


# ######################################################################
# X [0] Axis
# ######################################################################

# axis enable chain
newsig emcmot.00.enable bit
sets emcmot.00.enable FALSE

net emcmot.00.enable <= axis.0.amp-enable-out 
net emcmot.00.enable => hpg.stepgen.00.enable


# position command and feedback
net emcmot.00.pos-cmd <= axis.0.motor-pos-cmd
net emcmot.00.pos-cmd => hpg.stepgen.00.position-cmd

net motor.00.pos-fb <= hpg.stepgen.00.position-fb
net motor.00.pos-fb => axis.0.motor-pos-fb


# timing parameters
setp hpg.stepgen.00.dirsetup        [AXIS_0]DIRSETUP
setp hpg.stepgen.00.dirhold         [AXIS_0]DIRHOLD

setp hpg.stepgen.00.steplen         [AXIS_0]STEPLEN
setp hpg.stepgen.00.stepspace       [AXIS_0]STEPSPACE

setp hpg.stepgen.00.position-scale  [AXIS_0]SCALE

setp hpg.stepgen.00.maxvel          [AXIS_0]STEPGEN_MAX_VEL
setp hpg.stepgen.00.maxaccel        [AXIS_0]STEPGEN_MAX_ACC

#setp hpg.stepgen.00.step_type       0
# P8.9
setp hpg.stepgen.00.steppin          0x65
# P8.7 
setp hpg.stepgen.00.dirpin           0x62

setp hpg.stepgen.00.stepinvert 1

# ######################################################################
# Y [1] Axis
# ######################################################################

# axis enable chain
newsig emcmot.01.enable bit
sets emcmot.01.enable FALSE

net emcmot.01.enable <= axis.1.amp-enable-out 
net emcmot.01.enable => hpg.stepgen.01.enable


# position command and feedback
net emcmot.01.pos-cmd <= axis.1.motor-pos-cmd
net emcmot.01.pos-cmd => hpg.stepgen.01.position-cmd

net motor.01.pos-fb <= hpg.stepgen.01.position-fb
net motor.01.pos-fb => axis.1.motor-pos-fb


# timing parameters
setp hpg.stepgen.01.dirsetup        [AXIS_1]DIRSETUP
setp hpg.stepgen.01.dirhold         [AXIS_1]DIRHOLD

setp hpg.stepgen.01.steplen         [AXIS_1]STEPLEN
setp hpg.stepgen.01.stepspace       [AXIS_1]STEPSPACE

setp hpg.stepgen.01.position-scale  [AXIS_1]SCALE

setp hpg.stepgen.01.maxvel          [AXIS_1]STEPGEN_MAX_VEL
setp hpg.stepgen.01.maxaccel        [AXIS_1]STEPGEN_MAX_ACC

#setp hpg.stepgen.01.step_type       0
# P8.8
setp hpg.stepgen.01.steppin          0x63
# P8.10
setp hpg.stepgen.01.dirpin           0x64

setp hpg.stepgen.01.stepinvert 1

# ######################################################################
# Z [2] Axis
# ######################################################################

# axis enable chain
newsig emcmot.02.enable bit
sets emcmot.02.enable FALSE

net emcmot.02.enable <= axis.2.amp-enable-out 
net emcmot.02.enable => hpg.stepgen.02.enable


# position command and feedback
net emcmot.02.pos-cmd <= axis.2.motor-pos-cmd
net emcmot.02.pos-cmd => hpg.stepgen.02.position-cmd

net motor.02.pos-fb <= hpg.stepgen.02.position-fb
net motor.02.pos-fb => axis.2.motor-pos-fb


# timing parameters
setp hpg.stepgen.02.dirsetup        [AXIS_2]DIRSETUP
setp hpg.stepgen.02.dirhold         [AXIS_2]DIRHOLD

setp hpg.stepgen.02.steplen         [AXIS_2]STEPLEN
setp hpg.stepgen.02.stepspace       [AXIS_2]STEPSPACE

setp hpg.stepgen.02.position-scale  [AXIS_2]SCALE

setp hpg.stepgen.02.maxvel          [AXIS_2]STEPGEN_MAX_VEL
setp hpg.stepgen.02.maxaccel        [AXIS_2]STEPGEN_MAX_ACC

#setp hpg.stepgen.02.step_type       0
# P8.12
setp hpg.stepgen.02.steppin          0x4C
# P8.11
setp hpg.stepgen.02.dirpin           0x4D

setp hpg.stepgen.02.stepinvert 1

# ######################################################################
# A [3] Axis
# ######################################################################

# axis enable chain
# newsig emcmot.03.enable bit
# sets emcmot.03.enable FALSE

# net emcmot.03.enable <= axis.3.amp-enable-out 
# net emcmot.03.enable => hpg.stepgen.03.enable


# position command and feedback
# net emcmot.03.pos-cmd <= axis.3.motor-pos-cmd
# net emcmot.03.pos-cmd => hpg.stepgen.03.position-cmd

# net motor.03.pos-fb <= hpg.stepgen.03.position-fb
# net motor.03.pos-fb => axis.3.motor-pos-fb


# timing parameters
# setp hpg.stepgen.03.dirsetup        [AXIS_3]DIRSETUP
# setp hpg.stepgen.03.dirhold         [AXIS_3]DIRHOLD

# setp hpg.stepgen.03.steplen         [AXIS_3]STEPLEN
# setp hpg.stepgen.03.stepspace       [AXIS_3]STEPSPACE

# setp hpg.stepgen.03.position-scale  [AXIS_3]SCALE

# setp hpg.stepgen.03.maxvel          [AXIS_3]STEPGEN_MAX_VEL
# setp hpg.stepgen.03.maxaccel        [AXIS_3]STEPGEN_MAX_ACC

#setp hpg.stepgen.03.step_type       0
# P8.14
# setp hpg.stepgen.03.steppin          0x3A
# P8.16
# setp hpg.stepgen.03.dirpin           0x4E


# ######################################################################
# Standard I/O - EStop, Enables, Limit Switches, Etc
# ######################################################################
# http://linuxcnc.org/docs/2.6/html/config/emc2hal.html#sec:motion

# ######################################################################
# Standard inputs
# ######################################################################
#net in0 bb_gpio.p9.in-42 => motion.digital-in-00
#net in1 bb_gpio.p8.in-18 => motion.digital-in-01
#net in2 bb_gpio.p9.in-12 => motion.digital-in-02
#net in3 bb_gpio.p8.in-15 => motion.digital-in-03

# ######################################################################
# Standard outputs
# ######################################################################
#net out0 motion.digital-out-00 => bb_gpio.p8.out-13
#net out1 motion.digital-out-01 => bb_gpio.p8.out-19
#net out2 motion.digital-out-02 => bb_gpio.p9.out-14
net  out3 motion.digital-out-03 => bb_gpio.p9.out-16

# ######################################################################
# Emergency Stop Loopback
# ######################################################################
# net estop-loop iocontrol.0.user-enable-out => iocontrol.0.emc-enable-in
net estop bb_gpio.p9.in-24 => iocontrol.0.emc-enable-in

# ######################################################################
# create signals for tool loading loopback
# ######################################################################
#net tool-prep-loop iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
#net tool-change-loop iocontrol.0.tool-change => iocontrol.0.tool-changed

#setp hpg.pwmgen.00.pwm_period       10000000

# ######################################################################
# Home Switches
# ######################################################################
net  Xhome bb_gpio.p9.in-23 => axis.0.home-sw-in
net  Yhome bb_gpio.p9.in-27 => axis.1.home-sw-in
#net Zhome bb_gpio.p9.in-25 => axis.2.home-sw-in

# ######################################################################
# Limit Switches
# ######################################################################
net Xmin bb_gpio.p9.in-11 => axis.0.neg-lim-sw-in
net Xmax bb_gpio.p9.in-13 => axis.0.pos-lim-sw-in
net Ymin bb_gpio.p9.in-15 => axis.1.neg-lim-sw-in
net Ymax bb_gpio.p8.in-17 => axis.1.pos-lim-sw-in
net Zmin bb_gpio.p9.in-26 => axis.2.neg-lim-sw-in
net Zmax bb_gpio.p9.in-25 => axis.2.pos-lim-sw-in axis.2.home-sw-in

# ######################################################################
# Z Probe
# ######################################################################
setp        bb_gpio.p8.in-26.invert TRUE
net  Zprobe bb_gpio.p8.in-26        => motion.probe-input

# ######################################################################
# Stepper Driver Alarms
# ######################################################################
setp        bb_gpio.p8.in-15.invert TRUE
setp        bb_gpio.p9.in-42.invert TRUE
setp        bb_gpio.p8.in-18.invert TRUE
net  Xalarm bb_gpio.p8.in-15        => axis.0.amp-fault-in
net  Yalarm bb_gpio.p9.in-42        => axis.1.amp-fault-in
net  Zalarm bb_gpio.p8.in-18        => axis.2.amp-fault-in


# ######################################################################
# Spindle 
# ######################################################################
# http://linuxcnc.org/docs/2.7/html/man/man9/motion.9.html
# http://linuxcnc.org/docs/html/examples/spindle.html
#loadrt pwmgen                               output_type=0
#addf pwmgen.update                          servo-thread
#addf pwmgen.make-pulses                     servo-thread
#net  SpindleSpeed  motion.spindle-speed-out => pwmgen.0.value
#net  SpindleEnable motion.spindle-on        => pwmgen.0.enable bb_gpio.p8.out-13
#net  SpindlePwm    pwmgen.0.pwm             => bb_gpio.p9.out-14
## spindle top speed in RPM
#setp pwmgen.0.scale                         10000
# spindle direction 
net SpindleDirection motion.spindle-forward => bb_gpio.p8.out-19


# ######################################################################
#   closed spindle control loop
# ######################################################################
#http://wiki.linuxcnc.org/cgi-bin/wiki.pl?Closed_Loop_Spindle_Speed_Control
# Initialize the encoder (spindle)
loadrt encoder num_chan=1
addf encoder.update-counters servo-thread
addf encoder.capture-position servo-thread
setp encoder.0.position-scale 1
setp encoder.0.counter-mode 1

# Initialize the PID 
loadrt pid count=1
addf pid.0.do-pid-calcs servo-thread
setp pid.0.Pgain 0
setp pid.0.Igain 1
setp pid.0.Dgain 1
setp pid.0.maxoutput 4000

# Initialize the pwmgen
loadrt pwmgen output_type=0
addf pwmgen.update servo-thread
addf pwmgen.make-pulses servo-thread
setp pwmgen.0.pwm-freq 1000.0
setp pwmgen.0.scale 4000
setp pwmgen.0.dither-pwm true

# Initialize the scale
# This is used to scale the encoder pulse to RPM
# 3 ppr so it is scaled by 60/3=20
loadrt scale count=1
addf scale.0 servo-thread
setp scale.0.gain 20

# Initialize the sum2
loadrt sum2 count=1
addf sum2.0 servo-thread

# Attach the motion.spindle-on to enable the pwmgen and the pid
net spindle_enable motion.spindle-on => pwmgen.0.enable => pid.0.enable

# Attach the encoder to the port pin
net SpindleFeedback       bb_gpio.p9.in-12 => encoder.0.phase-A => encoder.0.phase-Z

# Attach the encoder to the motion and the scale
net spindle_rev_count     encoder.0.position => motion.spindle-revs
net spindle_index_enable  encoder.0.index-enable <=> motion.spindle-index-enable
net encoder_raw_velocity  encoder.0.velocity => scale.0.in

# Attach the pid to the scale, motion, and sum
net pid_feedback          pid.0.feedback <= motion.spindle-speed-in  <= scale.0.out
net pid_command           pid.0.command  <= motion.spindle-speed-out => sum2.0.in0
net pid_output            pid.0.output   => sum2.0.in1

# Attach the pwmgen to the sum and the parallel port
net pwmgen_value          pwmgen.0.value <= sum2.0.out
net pwmgen_out            pwmgen.0.pwm   => bb_gpio.p9.out-14


# ######################################################################
# Jog dial WHB04B-6
# ######################################################################

# Connect emergency stop signals
net pendant.estop.activate      whb.halui.estop.activate halui.estop.activate
net pendant.estop.is-activated  halui.estop.is-activated whb.halui.estop.is-activated
net pendant.estop.reset         whb.halui.estop.reset    halui.estop.reset
#net  pendant.machine.is-on     halui.machine.is-on      whb.halui.machine.is-on
#net  pendant.machine.on        whb.halui.machine.on     halui.machine.on
#net  pendant.machine.off       whb.halui.machine.off    halui.machine.off


# Connect program related signals
net pendant.program.is-idle    whb.halui.program.is-idle    halui.program.is-idle
net pendant.program.is-paused  whb.halui.program.is-paused  halui.program.is-paused
net pendant.program.is-running whb.halui.program.is-running halui.program.is-running
net pendant.program.resume     whb.halui.program.resume     halui.program.resume
net pendant.program.pause      whb.halui.program.pause      halui.program.pause
net pendant.program.run        whb.halui.program.run        halui.program.run
net pendant.program.stop       whb.halui.program.stop       halui.program.stop
net pendant.mode.is-auto       halui.mode.is-auto           whb.halui.mode.is-auto
net pendant.mode.auto          whb.halui.mode.auto          halui.mode.auto

# Connect "selected axis" signals    
net   pendant.X.select whb.halui.joint.x.select halui.joint.0.select
net   pendant.Y.select whb.halui.joint.y.select halui.joint.1.select
net   pendant.Z.select whb.halui.joint.z.select halui.joint.2.select
# net pendant.A.select whb.halui.joint.a.select halui.joint.3.select
# net pendant.B.select whb.halui.joint.b.select halui.joint.4.select
# net pendant.C.select whb.halui.joint.c.select halui.joint.5.select

# Connect "jog increment" signals (step mode). 
# Optionally use "whb.halui.jog.increment halui.jog.selected.increment".
#net   pendant.X.jog.increment       whb.halui.jog.x.increment       halui.jog.0.increment
#net   pendant.Y.jog.increment       whb.halui.jog.y.increment       halui.jog.1.increment
#net   pendant.Z.jog.increment       whb.halui.jog.z.increment       halui.jog.2.increment
# net  pendant.A.jog.increment       whb.halui.jog.a.increment       halui.jog.3.increment
# net  pendant.B.jog.increment       whb.halui.jog.b.increment       halui.jog.4.increment
# net  pendant.C.jog.increment       whb.halui.jog.c.increment       halui.jog.5.increment
#net   pendant.X.jog.increment.plus  whb.halui.jog.x.increment-plus  halui.jog.0.increment-plus
#net   pendant.Y.jog.increment.plus  whb.halui.jog.y.increment-plus  halui.jog.1.increment-plus
#net   pendant.Z.jog.increment.plus  whb.halui.jog.z.increment-plus  halui.jog.2.increment-plus
# net  pendant.A.jog.increment.plus  whb.halui.jog.a.increment-plus  halui.jog.3.increment-plus
# net  pendant.B.jog.increment.plus  whb.halui.jog.b.increment-plus  halui.jog.4.increment-plus
# net  pendant.C.jog.increment.plus  whb.halui.jog.c.increment-plus  halui.jog.5.increment-plus
#net   pendant.X.jog.increment.minus whb.halui.jog.x.increment-minus halui.jog.0.increment-minus
#net   pendant.Y.jog.increment.minus whb.halui.jog.y.increment-minus halui.jog.1.increment-minus
#net   pendant.Z.jog.increment.minus whb.halui.jog.z.increment-minus halui.jog.2.increment-minus
# net  pendant.A.jog.increment.minus whb.halui.jog.a.increment-minus halui.jog.3.increment-minus
# net  pendant.B.jog.increment.minus whb.halui.jog.b.increment-minus halui.jog.4.increment-minus
# net  pendant.C.jog.increment.minus whb.halui.jog.c.increment-minus halui.jog.5.increment-minus

# Connect "jog speed" signals (MPG mode)
#net   pendant.X.jog.speed.plus  whb.halui.jog.x.speed-plus  halui.jog.0.plus
#net   pendant.Y.jog.speed.plus  whb.halui.jog.y.speed-plus  halui.jog.1.plus
#net   pendant.Z.jog.speed.plus  whb.halui.jog.z.speed-plus  halui.jog.2.plus
# net  pendant.A.jog.speed.plus  whb.halui.jog.a.speed-plus  halui.jog.3.plus
# net  pendant.B.jog.speed.plus  whb.halui.jog.b.speed-plus  halui.jog.4.plus
# net  pendant.C.jog.speed.plus  whb.halui.jog.c.speed-plus  halui.jog.5.plus
#net   pendant.X.jog.speed.minus whb.halui.jog.x.speed-minus halui.jog.0.minus
#net   pendant.Y.jog.speed.minus whb.halui.jog.y.speed-minus halui.jog.1.minus
#net   pendant.Z.jog.speed.minus whb.halui.jog.z.speed-minus halui.jog.2.minus
# net  pendant.A.jog.speed.minus whb.halui.jog.a.speed-minus halui.jog.3.minus
# net  pendant.B.jog.speed.minus whb.halui.jog.b.speed-minus halui.jog.4.minus
# net  pendant.C.jog.speed.minus whb.halui.jog.c.speed-minus halui.jog.5.minus

net pendant.max-velocity.value  halui.max-velocity.value whb.halui.max-velocity.value
net pendant.home.all            whb.halui.home-all          halui.home-all

# Connect jog signals for step and continuous mode.
net pendant.jog.selected.increment       whb.halui.jog.selected.increment       halui.jog.selected.increment
net pendant.jog.selected.increment-plus  whb.halui.jog.selected.increment-plus  halui.jog.selected.increment-plus
net pendant.jog.selected.increment-minus whb.halui.jog.selected.increment-minus halui.jog.selected.increment-minus
net pendant.jog.selected.plus            whb.halui.jog.selected.plus            halui.jog.selected.plus
net pendant.jog.selected.minus           whb.halui.jog.selected.minus           halui.jog.selected.minus
net pendant.jog-speed                    whb.halui.jog-speed                    halui.jog-speed

# Connect macro buttons to mdi commands.
net pendant.macro.11 whb.button.macro-11 halui.mdi-command-11
net pendant.macro.12 whb.button.macro-12 halui.mdi-command-12
net pendant.macro.13 whb.button.macro-13 halui.mdi-command-13
net pendant.macro.1  whb.button.macro-1  halui.mdi-command-01
net pendant.macro.2  whb.button.macro-2  halui.mdi-command-02
net pendant.macro.3  whb.button.macro-3  halui.mdi-command-03
net pendant.macro.4  whb.button.macro-4  halui.mdi-command-04
net pendant.macro.5  whb.button.macro-5  halui.mdi-command-05
net pendant.macro.6  whb.button.macro-6  halui.mdi-command-06
net pendant.macro.7  whb.button.macro-7  halui.mdi-command-07
net pendant.macro.8  whb.button.macro-8  halui.mdi-command-08
net pendant.macro.9  whb.button.macro-9  halui.mdi-command-09
net pendant.macro.10 whb.button.macro-10 halui.mdi-command-10
net pendant.macro.14 whb.button.macro-14 halui.mdi-command-14
net pendant.macro.15 whb.button.macro-15 halui.mdi-command-15
net pendant.macro.16 whb.button.macro-16 halui.mdi-command-16

# Connect buttons to halui
net pendant.button.reset           whb.button.reset           
# toggles whb.halui.estop.{activate, reset} which are connected to halui.estop.{activate, reset} via whb.halui.estop.{activate, reset}
net pendant.button.stop            whb.button.stop            
# already linked to halui.program.stop via whb.program.stop
net pendant.button.start-pause     whb.button.start-pause     
# toggles whb.halui.program{run, pause, resume} which are connected to halui.program.{run, pause, resume} via whb.halui.program.{run, pause, resume}
net pendant.button.feed-plus       whb.button.feed-plus       
#halui.TODO
net pendant.button.feed-minus      whb.button.feed-minus      
#halui.TODO
net pendant.button.spindle-plus    whb.button.spindle-plus    
#halui.TODO
net pendant.button.spindle-minus   whb.button.spindle-minus   
#halui.TODO
net pendant.button.m-home          whb.button.m-home          
# already liked to halui.home-all via whb.halui.home-all
net pendant.button.safe-z          whb.button.safe-z          halui.joint.2.home
net pendant.button.w-home          whb.button.w-home          
#halui.TODO
net pendant.button.s-on-off        whb.button.s-on-off        
# toggles halui.spindle.{start, stop} according to halui.spindle.is-on via whb.halui.spindle.{start, stop}
net pendant.button.fn              whb.button.fn              
# unused, just exposes pendant interna
net pendant.button.probe-z         whb.button.probe-z         
#halui.TODO, eventually mdi-command
net pendant.button.mode-continuous whb.button.mode-continuous 
# unused, just exposes pendant interna
net pendant.button.mode-step       whb.button.mode-step       
# unused, just exposes pendant interna

