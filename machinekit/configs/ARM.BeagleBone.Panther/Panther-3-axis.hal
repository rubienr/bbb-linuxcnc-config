# ######################################################################
#
# HAL file for BeagleBone + BeBoPr cape with 4 steppers
#
# Derived from example hm2-stepper config
#
# ######################################################################

# Launch the setup script to make sure hardware setup looks good
loadusr -w ./setup.bridge.sh


# ######################################################################
# Core EMC/HAL Loads
# ######################################################################

# kinematics
loadrt trivkins

# motion controller, get name and thread periods from ini file
# trajectory planner
loadrt tp
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES tp=tp kins=trivkins


# load low-level drivers
loadrt hal_bb_gpio output_pins=916,914,819,813 input_pins=911,913,915,817,923,925,927,926,924,826,912,815,942,818,922,921
loadrt [PRUCONF](DRIVER) prucode=$(HAL_RTMOD_DIR)/[PRUCONF](PRUBIN) [PRUCONF](CONFIG) halname=hpg
#loadrt pid names=spindle
loadrt limit1 count=2


# Python user-mode HAL module to read ADC value and generate a thermostat output for PWM
# c = analog input channel and thermistor table
# loadusr -Wn Therm hal_temp_bbb -n Therm -c 04:epcos_B57560G1104,05:epcos_B57560G1104 -b CRAMPS

# ######################################################################
# THREADS
# ######################################################################

addf  hpg.capture-position                 servo-thread
addf  bb_gpio.read                         servo-thread
addf  motion-command-handler               servo-thread
addf  motion-controller                    servo-thread
#addf pid.0.do-pid-calcs                   servo-thread
#addf pid.1.do-pid-calcs                   servo-thread
addf  limit1.0                             servo-thread
addf  limit1.1                             servo-thread
addf  hpg.update                           servo-thread
addf  bb_gpio.write                        servo-thread


# ######################################################################
# Encoders
# ######################################################################

#loadrt encoder names=encoder.spindle
#addf encoder.capture-position servo-thread
#addf encoder.update-counters  servo-thread

# ######################################################################
# Axis-of-motion Specific Configs (not the GUI)
# ######################################################################


# ######################################################################
# X [0] Axis
# ######################################################################

# axis enable chain
newsig emcmot.00.enable bit
sets emcmot.00.enable FALSE

net emcmot.00.enable <= axis.0.amp-enable-out 
net emcmot.00.enable => hpg.stepgen.00.enable


# position command and feedback
net emcmot.00.pos-cmd <= axis.0.motor-pos-cmd
net emcmot.00.pos-cmd => hpg.stepgen.00.position-cmd

net motor.00.pos-fb <= hpg.stepgen.00.position-fb
net motor.00.pos-fb => axis.0.motor-pos-fb


# timing parameters
setp hpg.stepgen.00.dirsetup        [AXIS_0]DIRSETUP
setp hpg.stepgen.00.dirhold         [AXIS_0]DIRHOLD

setp hpg.stepgen.00.steplen         [AXIS_0]STEPLEN
setp hpg.stepgen.00.stepspace       [AXIS_0]STEPSPACE

setp hpg.stepgen.00.position-scale  [AXIS_0]SCALE

setp hpg.stepgen.00.maxvel          [AXIS_0]STEPGEN_MAX_VEL
setp hpg.stepgen.00.maxaccel        [AXIS_0]STEPGEN_MAX_ACC

#setp hpg.stepgen.00.step_type       0
# P8.9
setp hpg.stepgen.00.steppin          0x65
# P8.7 
setp hpg.stepgen.00.dirpin           0x62

#setp hpg.stepgen.00.stepinvert 1

# ######################################################################
# Y [1] Axis
# ######################################################################

# axis enable chain
newsig emcmot.01.enable bit
sets emcmot.01.enable FALSE

net emcmot.01.enable <= axis.1.amp-enable-out 
net emcmot.01.enable => hpg.stepgen.01.enable


# position command and feedback
net emcmot.01.pos-cmd <= axis.1.motor-pos-cmd
net emcmot.01.pos-cmd => hpg.stepgen.01.position-cmd

net motor.01.pos-fb <= hpg.stepgen.01.position-fb
net motor.01.pos-fb => axis.1.motor-pos-fb


# timing parameters
setp hpg.stepgen.01.dirsetup        [AXIS_1]DIRSETUP
setp hpg.stepgen.01.dirhold         [AXIS_1]DIRHOLD

setp hpg.stepgen.01.steplen         [AXIS_1]STEPLEN
setp hpg.stepgen.01.stepspace       [AXIS_1]STEPSPACE

setp hpg.stepgen.01.position-scale  [AXIS_1]SCALE

setp hpg.stepgen.01.maxvel          [AXIS_1]STEPGEN_MAX_VEL
setp hpg.stepgen.01.maxaccel        [AXIS_1]STEPGEN_MAX_ACC

#setp hpg.stepgen.01.step_type       0
# P8.8
setp hpg.stepgen.01.steppin          0x63
# P8.10
setp hpg.stepgen.01.dirpin           0x64

#setp hpg.stepgen.01.stepinvert 1

# ######################################################################
# Z [2] Axis
# ######################################################################

# axis enable chain
newsig emcmot.02.enable bit
sets emcmot.02.enable FALSE

net emcmot.02.enable <= axis.2.amp-enable-out 
net emcmot.02.enable => hpg.stepgen.02.enable


# position command and feedback
net emcmot.02.pos-cmd <= axis.2.motor-pos-cmd
net emcmot.02.pos-cmd => hpg.stepgen.02.position-cmd

net motor.02.pos-fb <= hpg.stepgen.02.position-fb
net motor.02.pos-fb => axis.2.motor-pos-fb


# timing parameters
setp hpg.stepgen.02.dirsetup        [AXIS_2]DIRSETUP
setp hpg.stepgen.02.dirhold         [AXIS_2]DIRHOLD

setp hpg.stepgen.02.steplen         [AXIS_2]STEPLEN
setp hpg.stepgen.02.stepspace       [AXIS_2]STEPSPACE

setp hpg.stepgen.02.position-scale  [AXIS_2]SCALE

setp hpg.stepgen.02.maxvel          [AXIS_2]STEPGEN_MAX_VEL
setp hpg.stepgen.02.maxaccel        [AXIS_2]STEPGEN_MAX_ACC

#setp hpg.stepgen.02.step_type       0
# P8.12
setp hpg.stepgen.02.steppin          0x4C
# P8.11
setp hpg.stepgen.02.dirpin           0x4D

#setp hpg.stepgen.02.stepinvert 1

# ######################################################################
# A [3] Axis
# ######################################################################

# axis enable chain
# newsig emcmot.03.enable bit
# sets emcmot.03.enable FALSE

# net emcmot.03.enable <= axis.3.amp-enable-out 
# net emcmot.03.enable => hpg.stepgen.03.enable


# position command and feedback
# net emcmot.03.pos-cmd <= axis.3.motor-pos-cmd
# net emcmot.03.pos-cmd => hpg.stepgen.03.position-cmd

# net motor.03.pos-fb <= hpg.stepgen.03.position-fb
# net motor.03.pos-fb => axis.3.motor-pos-fb


# timing parameters
# setp hpg.stepgen.03.dirsetup        [AXIS_3]DIRSETUP
# setp hpg.stepgen.03.dirhold         [AXIS_3]DIRHOLD

# setp hpg.stepgen.03.steplen         [AXIS_3]STEPLEN
# setp hpg.stepgen.03.stepspace       [AXIS_3]STEPSPACE

# setp hpg.stepgen.03.position-scale  [AXIS_3]SCALE

# setp hpg.stepgen.03.maxvel          [AXIS_3]STEPGEN_MAX_VEL
# setp hpg.stepgen.03.maxaccel        [AXIS_3]STEPGEN_MAX_ACC

#setp hpg.stepgen.03.step_type       0
# P8.14
# setp hpg.stepgen.03.steppin          0x3A
# P8.16
# setp hpg.stepgen.03.dirpin           0x4E


# ######################################################################
# Standard I/O - EStop, Enables, Limit Switches, Etc
# ######################################################################
# http://linuxcnc.org/docs/2.6/html/config/emc2hal.html#sec:motion

# ######################################################################
# Standard inputs
# ######################################################################
#net in0 bb_gpio.p9.in-42 => motion.digital-in-00
#net in1 bb_gpio.p8.in-18 => motion.digital-in-01
#net in2 bb_gpio.p9.in-12 => motion.digital-in-02
#net in3 bb_gpio.p8.in-15 => motion.digital-in-03

# ######################################################################
# Standard outputs
# ######################################################################
net  out3 motion.digital-out-03 => bb_gpio.p9.out-16

# ######################################################################
# Emergency Stop Loopback
# ######################################################################
# net estop-loop iocontrol.0.user-enable-out => iocontrol.0.emc-enable-in
net estop bb_gpio.p9.in-24 => iocontrol.0.emc-enable-in

# ######################################################################
# create signals for tool loading loopback
# ######################################################################
#net tool-prep-loop iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
#net tool-change-loop iocontrol.0.tool-change => iocontrol.0.tool-changed

#setp hpg.pwmgen.00.pwm_period       10000000

# ######################################################################
# Home Switches
# ######################################################################
net  Xhome bb_gpio.p9.in-23 => axis.0.home-sw-in
net  Yhome bb_gpio.p9.in-27 => axis.1.home-sw-in
#net Zhome bb_gpio.p9.in-25 => axis.2.home-sw-in

# ######################################################################
# Limit Switches
# ######################################################################
net Xmin bb_gpio.p9.in-11 => axis.0.neg-lim-sw-in
net Xmax bb_gpio.p9.in-13 => axis.0.pos-lim-sw-in
net Ymin bb_gpio.p9.in-15 => axis.1.neg-lim-sw-in
net Ymax bb_gpio.p8.in-17 => axis.1.pos-lim-sw-in
net Zmin bb_gpio.p9.in-26 => axis.2.neg-lim-sw-in
net Zmax bb_gpio.p9.in-25 => axis.2.pos-lim-sw-in axis.2.home-sw-in

# ######################################################################
# Z Probe
# ######################################################################
setp        bb_gpio.p8.in-26.invert TRUE
net  Zprobe bb_gpio.p8.in-26        => motion.probe-input

# ######################################################################
# Stepper Driver Alarms
# ######################################################################
setp        bb_gpio.p8.in-15.invert TRUE
setp        bb_gpio.p9.in-42.invert TRUE
setp        bb_gpio.p8.in-18.invert TRUE
net  Xalarm bb_gpio.p8.in-15        => axis.0.amp-fault-in
net  Yalarm bb_gpio.p9.in-42        => axis.1.amp-fault-in
net  Zalarm bb_gpio.p8.in-18        => axis.2.amp-fault-in


# ######################################################################
# Spindle 
# ######################################################################
# http://linuxcnc.org/docs/2.7/html/man/man9/motion.9.html
# http://linuxcnc.org/docs/html/examples/spindle.html
#loadrt pwmgen              output_type=0
#addf pwmgen.update         servo-thread
#addf pwmgen.make-pulses    servo-thread
# Create spindle related signals
net  spindle.is-on            motion.spindle-on         bb_gpio.p8.out-13
net  spindle.start            halui.spindle.start         
net  spindle.stop             halui.spindle.stop

net  spindle.runs-forward     motion.spindle-forward     
net  spindle.runs-reverse     motion.spindle-reverse bb_gpio.p8.out-19
net  spindle.speed-out        motion.spindle-speed-out 

net  spindle.increase         halui.spindle.increase
net  spindle.decrease         halui.spindle.decrease
net  spindle.spindle-override.value                       halui.spindle-override.value
net  spindle.spindle-override.increase                    halui.spindle-override.increase
net  spindle.spindle-override.decrease                    halui.spindle-override.decrease
net  spindle.rpm-out                                      bb_gpio.p9.out-14
net  spindle.rpm-in           bb_gpio.p9.in-12


## spindle top speed in RPM
#setp pwmgen.0.scale                         10000


## ######################################################################
##   closed spindle control loop
## ######################################################################
##http://wiki.linuxcnc.org/cgi-bin/wiki.pl?Closed_Loop_Spindle_Speed_Control
## Initialize the encoder (spindle)
##loadrt encoder num_chan=1
#addf  encoder.update-counters  servo-thread
#addf  encoder.capture-position servo-thread
#setp  encoder.spindle.position-scale 1
#setp  encoder.spindle.counter-mode   1
#
## Initialize the PID 
#loadrt pid count=1
#addf   pid.0.do-pid-calcs servo-thread
#setp   pid.0.Pgain        0
#setp   pid.0.Igain        1
#setp   pid.0.Dgain        1
#setp   pid.0.maxoutput    4000
#
## Initialize the pwmgen
##loadrt pwmgen output_type=0
##addf   pwmgen.update       servo-thread
##addf   pwmgen.make-pulses  servo-thread
#setp   pwmgen.0.pwm-freq   1000.0
#setp   pwmgen.0.scale      4000
#setp   pwmgen.0.dither-pwm true
#
## Initialize the scale
## This is used to scale the encoder pulse to RPM
## 3 ppr so it is scaled by 60/3=20
#loadrt scale count=1
#addf   scale.0      servo-thread
#setp   scale.0.gain 20
#
## Initialize the sum2
#loadrt sum2 count=1
#addf   sum2.0 servo-thread
#
## Attach the motion.spindle-on to enable the pwmgen and the pid
#net spindle_enable motion.spindle-on => pwmgen.0.enable => pid.0.enable
#
## Attach the encoder to the port pin
#net SpindleFeedback encoder.spindle.phase-A => encoder.spindle.phase-Z
#
## Attach the encoder to the motion and the scale
#net  spindle_rev_count     encoder.spindle.position => motion.spindle-revs
#net  spindle_index_enable  encoder.spindle.index-enable <=> motion.spindle-index-enable
#net  encoder_raw_velocity  encoder.spindle.velocity => scale.0.in
#
## Attach the pid to the scale, motion, and sum
#net  pid_feedback          pid.0.feedback <= motion.spindle-speed-in  <= scale.0.out
#net  pid_command           pid.0.command  <= motion.spindle-speed-out => sum2.0.in0
#net  pid_output            pid.0.output   => sum2.0.in1
#
## Attach the pwmgen to the sum and the parallel port
#net  pwmgen_value          pwmgen.0.value <= sum2.0.out
#net  spindle.rpm-out       pwmgen.0.pwm


# ######################################################################
# Jog dial WHB04B-6
# ######################################################################

# Connect emergency stop signals
net  pdnt.machine.is-on                  halui.machine.is-on          whb.halui.machine.is-on
net  pdnt.machine.on                     whb.halui.machine.on         halui.machine.on
net  pdnt.machine.off                    whb.halui.machine.off        halui.machine.off

# Connect program related signals
net  pdnt.program.is-idle                whb.halui.program.is-idle    halui.program.is-idle
net  pdnt.program.is-paused              whb.halui.program.is-paused  halui.program.is-paused
net  pdnt.program.is-running             whb.halui.program.is-running halui.program.is-running
net  pdnt.program.resume                 whb.halui.program.resume     halui.program.resume
net  pdnt.program.pause                  whb.halui.program.pause      halui.program.pause
net  pdnt.program.run                    whb.halui.program.run        halui.program.run
net  pdnt.program.stop                   whb.halui.program.stop       halui.program.stop

# Connect "selected axis" signals    
net  pdnt.joint.X.select                 whb.halui.joint.x.select     halui.joint.0.select
net  pdnt.joint.Y.select                 whb.halui.joint.y.select     halui.joint.1.select
net  pdnt.joint.Z.select                 whb.halui.joint.z.select     halui.joint.2.select
#net pdnt.joint.A.select                 whb.halui.joint.a.select     halui.joint.3.select
#net pdnt.joint.B.select                 whb.halui.joint.b.select     halui.joint.4.select
#net pdnt.joint.C.select                 whb.halui.joint.c.select     halui.joint.5.select

# Connect jog signals for step and continuous mode
net  pdnt.stepgen.00.maxvel              hpg.stepgen.00.maxvel         whb.stepgen.00.maxvel
net  pdnt.stepgen.01.maxvel              hpg.stepgen.01.maxvel         whb.stepgen.01.maxvel
net  pdnt.stepgen.02.maxvel              hpg.stepgen.02.maxvel         whb.stepgen.02.maxvel
#net pdnt.stepgen.03.maxvel              hpg.stepgen.03.maxvel         whb.stepgen.03.maxvel
#net pdnt.stepgen.04.maxvel              hpg.stepgen.04.maxvel         whb.stepgen.04.maxvel
#net pdnt.stepgen.05.maxvel              hpg.stepgen.05.maxvel         whb.stepgen.05.maxvel
net  pdnt.stepgen.00.position-scale      hpg.stepgen.00.position-scale whb.stepgen.00.position-scale
net  pdnt.stepgen.01.position-scale      hpg.stepgen.01.position-scale whb.stepgen.01.position-scale
net  pdnt.stepgen.02.position-scale      hpg.stepgen.02.position-scale whb.stepgen.02.position-scale
#net pdnt.stepgen.03.position-scale      hpg.stepgen.03.position-scale whb.stepgen.03.position-scale
#net pdnt.stepgen.04.position-scale      hpg.stepgen.04.position-scale whb.stepgen.04.position-scale
#net pdnt.stepgen.05.position-scale      hpg.stepgen.05.position-scale whb.stepgen.05.position-scale

loadrt ilowpass names=ilowpass.jog.0,ilowpass.jog.1,ilowpass.jog.2
addf ilowpass.jog.0       servo-thread
addf ilowpass.jog.1       servo-thread
addf ilowpass.jog.2       servo-thread
setp ilowpass.jog.0.scale 100
setp ilowpass.jog.1.scale 100
setp ilowpass.jog.2.scale 100
setp ilowpass.jog.0.gain  0.007
setp ilowpass.jog.1.gain  0.007
setp ilowpass.jog.2.gain  0.007

loadrt scale names=scale.axis.0,scale.axis.1,scale.axis.2
addf scale.axis.0       servo-thread
addf scale.axis.1       servo-thread
addf scale.axis.2       servo-thread

net  pdnt.axis.0.jog-scale               whb.axis.0.jog-scale          scale.axis.0.in      
net  pdnt.axis.1.jog-scale               whb.axis.1.jog-scale          scale.axis.1.in      
net  pdnt.axis.2.jog-scale               whb.axis.2.jog-scale          scale.axis.2.in      
setp scale.axis.0.gain                   0.01 
setp scale.axis.1.gain                   0.01 
setp scale.axis.2.gain                   0.01 
setp scale.axis.0.offset                 0
setp scale.axis.1.offset                 0
setp scale.axis.2.offset                 0
net  scale.axis.0.jog-scale              scale.axis.0.out              axis.0.jog-scale
net  scale.axis.1.jog-scale              scale.axis.1.out              axis.1.jog-scale
net  scale.axis.2.jog-scale              scale.axis.2.out              axis.2.jog-scale


net  pdnt.axis.0.jog-counts              whb.axis.0.jog-counts         ilowpass.jog.0.in
net  pdnt.axis.1.jog-counts              whb.axis.1.jog-counts         ilowpass.jog.1.in
net  pdnt.axis.2.jog-counts              whb.axis.2.jog-counts         ilowpass.jog.2.in
net  pdnt.ilowpass.jog.0.jog-counts     ilowpass.jog.0.out            axis.0.jog-counts
net  pdnt.ilowpass.jog.1.jog-counts     ilowpass.jog.1.out            axis.1.jog-counts
net  pdnt.ilowpass.jog.2.jog-counts     ilowpass.jog.2.out            axis.2.jog-counts

#net  pdnt.axis.0.jog-counts              whb.axis.0.jog-counts         axis.0.jog-counts
#net  pdnt.axis.1.jog-counts              whb.axis.1.jog-counts         axis.1.jog-counts
#net  pdnt.axis.2.jog-counts              whb.axis.2.jog-counts         axis.2.jog-counts
#net pdnt.axis.3.jog-counts              whb.axis.3.jog-counts         axis.3.jog-counts
#net pdnt.axis.4.jog-counts              whb.axis.4.jog-counts         axis.4.jog-counts
#net pdnt.axis.5.jog-counts              whb.axis.5.jog-counts         axis.5.jog-counts
net  pdnt.axis.0.jog-enable              whb.axis.0.jog-enable         axis.0.jog-enable
net  pdnt.axis.1.jog-enable              whb.axis.1.jog-enable         axis.1.jog-enable
net  pdnt.axis.2.jog-enable              whb.axis.2.jog-enable         axis.2.jog-enable
#net pdnt.axis.3.jog-enable              whb.axis.3.jog-enable         axis.3.jog-enable
#net pdnt.axis.4.jog-enable              whb.axis.4.jog-enable         axis.4.jog-enable
#net pdnt.axis.5.jog-enable              whb.axis.5.jog-enable         axis.5.jog-enable
#net  pdnt.axis.0.jog-scale               whb.axis.0.jog-scale          axis.0.jog-scale
#net  pdnt.axis.1.jog-scale               whb.axis.1.jog-scale          axis.1.jog-scale
#net  pdnt.axis.2.jog-scale               whb.axis.2.jog-scale          axis.2.jog-scale
#net pdnt.axis.3.jog-scale               whb.axis.3.jog-scale          axis.3.jog-scale
#net pdnt.axis.4.jog-scale               whb.axis.4.jog-scale          axis.4.jog-scale
#net pdnt.axis.5.jog-scale               whb.axis.5.jog-scale          axis.5.jog-scale
net  pdnt.axis.0.jog-vel-mode            whb.axis.0.jog-vel-mode       axis.0.jog-vel-mode
net  pdnt.axis.1.jog-vel-mode            whb.axis.1.jog-vel-mode       axis.1.jog-vel-mode
net  pdnt.axis.2.jog-vel-mode            whb.axis.2.jog-vel-mode       axis.2.jog-vel-mode
#net pdnt.axis.3.jog-vel-mode            whb.axis.3.jog-vel-mode       axis.3.jog-vel-mode
#net pdnt.axis.4.jog-vel-mode            whb.axis.4.jog-vel-mode       axis.4.jog-vel-mode
#net pdnt.axis.5.jog-vel-mode            whb.axis.5.jog-vel-mode       axis.5.jog-vel-mode

# Connect macro buttons to mdi commands
#net pdnt.macro.11                       whb.button.macro-11           halui.mdi-command-11
#net pdnt.macro.12                       whb.button.macro-12           halui.mdi-command-12
#net pdnt.macro.13                       whb.button.macro-13           halui.mdi-command-13
#net pdnt.macro.1                        whb.button.macro-1            halui.mdi-command-01
#net pdnt.macro.2                        whb.button.macro-2            halui.mdi-command-02
#net pdnt.macro.3                        whb.button.macro-3
#net pdnt.macro.4                        whb.button.macro-4
#net pdnt.macro.5                        whb.button.macro-5            halui.mdi-command-05
#net pdnt.macro.6                        whb.button.macro-6            halui.mdi-command-06
#net pdnt.macro.7                        whb.button.macro-7            halui.mdi-command-07
#net pdnt.macro.8                        whb.button.macro-8            halui.mdi-command-08
#net pdnt.macro.9                        whb.button.macro-9            halui.mdi-command-09
net  pdnt.home-all                       whb.button.macro-10           halui.home-all
#net pdnt.macro.14                       whb.button.macro-14           halui.mdi-command-14
#net pdnt.macro.15                       whb.button.macro-15           halui.mdi-command-15
#net pdnt.macro.16                       whb.button.macro-16           halui.mdi-command-16

# Connect reset, stop, start/pause/resume buttons to halui
# toggles whb.halui.estop.{activate, reset} which are
# already connected to halui.estop.{activate, reset} via whb.halui.estop.{activate, reset}
net  pdnt.button.reset                   whb.button.reset
# already linked to halui.program.stop via whb.program.stop
net  pdnt.button.stop                    whb.button.stop
# toggles whb.halui.program{run, pause, resume} which are 
# already connected to halui.program.{run, pause, resume} via whb.halui.program.{run, pause, resume}
net  pdnt.button.start-pause             whb.button.start-pause     

# Connect special positions signals
net  pdnt.button.m-home                  whb.button.m-home            halui.mdi-command-01
net  pdnt.button.safe-z                  whb.button.safe-z            halui.mdi-command-00
net  pdnt.button.w-home                  whb.button.w-home            halui.mdi-command-05
net  pdnt.button.s-on-off                whb.button.s-on-off

# unused, just exposes pendant interna
net pdnt.button.fn                       whb.button.fn

#halui.TODO, eventually mdi-command
net  pdnt.button.probe-z                 whb.button.probe-z           halui.mdi-command-02

# unused, just exposes pendant interna
net  pdnt.button.mode-continuous         whb.button.mode-continuous

# unused, just exposes pendant interna
net  pdnt.button.mode-step               whb.button.mode-step

# Connect spindle related signals
net  spindle.is-on                       whb.halui.spindle.is-on
net  spindle.start                       whb.halui.spindle.start
net  spindle.stop                        whb.halui.spindle.stop
net  pdnt.button.spindle-plus            whb.button.spindle-plus
net  pdnt.button.spindle-minus           whb.button.spindle-minus
net  spindle.increase                    whb.halui.spindle.increase
net  spindle.decrease                    whb.halui.spindle.decrease
# min/max override depends on [DISPLAY]MIN_SPINDLE_OVERRIDE and [DISPLAY]MAX_SPINDLE_OVERRIDE
net  spindle.spindle-override.value      whb.halui.spindle-override.value
net  spindle.spindle-override.increase   whb.halui.spindle-override.increase
net  spindle.spindle-override.decrease   whb.halui.spindle-override.decrease

# Connect machine mode related signals
net  pdnt.halui.mode.auto                whb.halui.mode.auto           halui.mode.auto
net  pdnt.halui.mode.joint               whb.halui.mode.joint          halui.mode.joint
net  pdnt.halui.mode.manual              whb.halui.mode.manual         halui.mode.manual
net  pdnt.halui.mode.mdi                 whb.halui.mode.mdi            halui.mode.mdi
net  pdnt.halui.mode.is-auto             halui.mode.is-auto            whb.halui.mode.is-auto
net  pdnt.halui.mode.is-joint            halui.mode.is-joint           whb.halui.mode.is-joint
net  pdnt.halui.mode.is-manual           halui.mode.is-manual          whb.halui.mode.is-manual
net  pdnt.halui.mode.is-mdi              halui.mode.is-mdi             whb.halui.mode.is-mdi

# Connect feed rate related signals
net  pdnt.halui.feed-override.scale      whb.halui.feed-override.scale      halui.feed-override.scale
net  pdnt.halui.feed-override.direct-val whb.halui.feed-override.direct-val halui.feed-override.direct-value  
net  pdnt.halui.feed-override.counts     whb.halui.feed-override.counts     halui.feed-override.counts

# min/max override depends on [DISPLAY]MIN_FEED_OVERRIDE and [DISPLAY]MAX_FEED_OVERRIDE
net  pdnt.halui.feed-override.increase   whb.halui.feed-override.increase halui.feed-override.increase
net  pdnt.halui.feed-override.decrease   whb.halui.feed-override.decrease halui.feed-override.decrease
net  pdnt.button.feed-plus               whb.button.feed-plus
net  pdnt.button.feed-minus              whb.button.feed-minus

# Connect axis position related signals
net  pdnt.halui.axis.0.pos-feedback      halui.axis.0.pos-feedback        whb.halui.axis.0.pos-feedback
net  pdnt.halui.axis.1.pos-feedback      halui.axis.1.pos-feedback        whb.halui.axis.1.pos-feedback
net  pdnt.halui.axis.2.pos-feedback      halui.axis.2.pos-feedback        whb.halui.axis.2.pos-feedback
net  pdnt.halui.axis.3.pos-feedback      halui.axis.3.pos-feedback        whb.halui.axis.3.pos-feedback
net  pdnt.halui.axis.4.pos-feedback      halui.axis.4.pos-feedback        whb.halui.axis.4.pos-feedback
net  pdnt.halui.axis.5.pos-feedback      halui.axis.5.pos-feedback        whb.halui.axis.5.pos-feedback
net  pdnt.halui.axis.0.pos-relative      halui.axis.0.pos-relative        whb.halui.axis.0.pos-relative
net  pdnt.halui.axis.1.pos-relative      halui.axis.1.pos-relative        whb.halui.axis.1.pos-relative
net  pdnt.halui.axis.2.pos-relative      halui.axis.2.pos-relative        whb.halui.axis.2.pos-relative
net  pdnt.halui.axis.3.pos-relative      halui.axis.3.pos-relative        whb.halui.axis.3.pos-relative
net  pdnt.halui.axis.4.pos-relative      halui.axis.4.pos-relative        whb.halui.axis.4.pos-relative
net  pdnt.halui.axis.5.pos-relative      halui.axis.5.pos-relative        whb.halui.axis.5.pos-relative
