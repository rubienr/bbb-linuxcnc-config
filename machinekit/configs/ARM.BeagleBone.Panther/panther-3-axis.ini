#-----------------------------------------------------------------------

[PRUCONF]

DRIVER = hal_pru_generic
CONFIG = pru=0 num_stepgens=3 num_pwmgens=0
PRUBIN = rt-preempt/pru_generic.bin

#-----------------------------------------------------------------------

[EMC]

# Name of machine, for use with display, etc.
MACHINE = Panther

# Debug level, 0 means no messages. See src/emc/nml_int/emcglb.h for 
# others
#DEBUG =                0x00000003
#DEBUG =                0x00000007
DEBUG = 0

#-----------------------------------------------------------------------

# http://linuxcnc.org/docs/2.4/html/config_ini_config.html
[DISPLAY]

# The name of the user interface to use. 
# Valid options may include: axis, touchy, gmoccapy, gscreen, keystick, 
# mini, tklinuxcnc, xemc 
DISPLAY = axis

# Cycle time, in seconds, that display will sleep between polls
CYCLE_TIME = 0.200

# Path to help file
HELP_FILE = tklinucnc.txt

# Initial display setting for position, RELATIVE or MACHINE
#POSITION_OFFSET = RELATIVE
POSITION_OFFSET = MACHINE

# Initial display setting for position, COMMANDED or ACTUAL
#POSITION_FEEDBACK = ACTUAL
POSITION_FEEDBACK = ACTUAL

# Min/max value that will be allowed for feed override, 1.0 = 100%
MIN_FEED_OVERRIDE = 0
MAX_FEED_OVERRIDE = 1.5

# Prefix to be used
PROGRAM_PREFIX = ~/linuxcnc/configs/ARM.BeagleBone.Panther/nc_files/
#SUBROUTINE_PATH = ~/linuxcnc/configs/ARM.BeagleBone.Panther/nc_files/

# Introductory graphic
INTRO_GRAPHIC = machinekit.gif
INTRO_TIME = 12

# Increments for the jog section in machine units per second
INCREMENTS = 1 0.1 0.0125 0.01 0.001
# default jog velocity
DEFAULT_LINEAR_VELOCITY = 17.75
# min jog velocity
MIN_VELOCITY = 1
# max jog velocity
MAX_LINEAR_VELOCITY = 28
#MAX_LINEAR_VELOCITY = 17.75

MIN_SPINDLE_OVERRIDE = 0.3
MAX_SPINDLE_OVERRIDE = 1.5

#PYVCP = 3D.Temps.panel.xml
PYVCP = hy-vfd-panel.xml

#-----------------------------------------------------------------------

[FILTER]

PROGRAM_EXTENSION = .png, .gif, .jpg Grayscale Depth Image
# PROGRAM_EXTENSION = .py Python Script
png = image-to-gcode
gif = image-to-gcode
jpg = image-to-gcode
py  = python

#-----------------------------------------------------------------------

# http://linuxcnc.org/docs/2.4/html/config_ini_config.html
[TASK]
# Specifies the name of the "task" executable. "task" does various 
# things, such as communicate with the UIs over NML, communicate with 
# the realtime motion planner over non-HAL shared memory, and interpret 
# gcode. Currently there is only one task executable that makes sense 
# for 99.9% of users, milltask In the dim mists of time (before HAL), 
# it was frequently the case that an integrator would have to build a 
# modified version of things like task, io, and motion for a specific 
# machine.
TASK = milltask

# The period, in seconds, at which EMCTASK will run. 
# This parameter affects the polling interval when waiting for motion 
# to complete, when executing a pause instruction, and when accepting a 
# command from a user interface. There is usually no need to change this 
# number.
CYCLE_TIME = 0.010

#-----------------------------------------------------------------------

[RS274NGC]
# File containing interpreter variables
PARAMETER_FILE = pru-stepper.var

#-----------------------------------------------------------------------

# http://linuxcnc.org/docs/2.4/html/config_ini_config.html
# The module within LinuxCNC that handles the actual motion of the cutting tool.
# It runs as a real-time program and directly controls the motors.
[EMCMOT]

# The motion controller name is typically used here.
EMCMOT = motmod
# Timeout for comm to emcmot, in seconds
COMM_TIMEOUT = 1.0

# Interval between tries to emcmot, in seconds
COMM_WAIT = 0.010

# This is the Servo task period in nanoseconds. 
# This value will be rounded to an integer multiple of base_period_nsec. 
# This period is used even on systems based on stepper motors. 
SERVO_PERIOD = 1000000
#SERVO_PERIOD =    750000
#SERVO_PERIOD =    500000

#-----------------------------------------------------------------------

[XHC_WHB04B_6_CONFIG]
COMPONENT_ARGUMENTS = -a

#-----------------------------------------------------------------------

[HY_VFD_CONFIG]
#COMPONENT_ARGUMENTS = --device /dev/ttyUSB0 --debug --bits 8 --parity none --rate 19200 --stopbits 1 --target 1
COMPONENT_ARGUMENTS = --device /dev/ttyUSB0 --bits 8 --parity none --rate 4800 --stopbits 1 --target 1

#-----------------------------------------------------------------------

[HAL]
# The run script first uses halcmd to execute any HALFILE
# files, and then to execute any individual HALCMD commands.

# list of hal config files to run through halcmd
# files are executed in the order in which they appear
HALFILE = panther-3-axis.hal
HALFILE = xhc-whb04b-6.hal
HALFILE = hy-vfd.hal

# list of halcmd commands to execute
# commands are executed in the order in which they appear
#HALCMD =               save neta

POSTGUI_HALFILE = xhc-whb04b-6-post-gui.hal
#POSTGUI_HALFILE = hy-vfd-post-gui.hal

HALUI = halui

#-----------------------------------------------------------------------

[TRAJ]

# One more than the number of the highest joint number in the system.
AXES = 3
# Number motors in the system.
JOINTS = 3
# Name of the axes.
COORDINATES = X Y Z

# The maximum velocity for angular jogs, in machine units per second.
MAX_ANGULAR_VELOCITY = 45.00
DEFAULT_ANGULAR_VELOCITY = 4.50

# Specifies the machine units for linear axes. Possible choices are 
# (in, inch, imperial, metric, mm). This does not affect the linear 
# units in NC code (the G20 and G21 words do this). 
LINEAR_UNITS = mm
# Specifies the machine units for rotational axes: deg, degree, rad, 
# radian
ANGULAR_UNITS = degree
_
###CYCLE_TIME = 0.010

# The initial rate for jogs of linear axes, in machine units per second. 
# The value shown in Axis equals machine units per minute.
DEFAULT_VELOCITY = 18.5
# The maximum velocity for any axis or coordinated move, in machine
# units per second.
MAX_LINEAR_VELOCITY = 25

NO_FORCE_HOMING = 0

#-----------------------------------------------------------------------

# http://wiki.linuxcnc.org/cgi-bin/wiki.pl?Stepper_Motor_Speed_Limitations

# X - Axis
[AXIS_0]

TYPE = LINEAR
TYPE = LINEAR
#MAX_VELOCITY =     18.3
MAX_VELOCITY =     21
#MAX_ACCELERATION = 48
MAX_ACCELERATION = 47
# Set Stepgen max 20% higher than the axis
STEPGEN_MAX_VEL =  22
STEPGEN_MAX_ACC =  58

BACKLASH = 0.000

# 4 microsteps 160, 8 microsteps 320, 2 microsteps 80
SCALE = 80

MIN_LIMIT = 25.0
MAX_LIMIT = 535.0

FERROR = 0.01
MIN_FERROR = 0.001

HOME = 275
HOME_OFFSET = 275
HOME_IGNORE_LIMITS = NO
HOME_USE_INDEX = NO
HOME_SEQUENCE = 1
HOME_IS_SHARED = 0
VOLATILE_HOME = 0

# Set to zero if you don't have physical home/limit switches
# Set to the desired homing and latch velocity if you have switches
# See: http://linuxcnc.org/docs/html/config/ini-homing.html
#HOME_SEARCH_VEL = 17.5
HOME_SEARCH_VEL = 21
HOME_LATCH_VEL = -1.0

# these are in nanoseconds
# http://www.daycounter.com/Calculators/Inductor-Current-Power-Calculator.phtml
# @ 2.8A, 12mH, 49.8V
#DIRSETUP  = 337500
DIRSETUP   = 005000
#DIRHOLD   = 337500
DIRHOLD    = 005000
STEPLEN    = 337500
#STEPSPACE = 337500
STEPSPACE  = 002500

#-----------------------------------------------------------------------

# Y - Axis
[AXIS_1]

TYPE = LINEAR
#MAX_VELOCITY =     18.3
MAX_VELOCITY =     21
#MAX_ACCELERATION = 48
MAX_ACCELERATION = 45
# Set Stepgen max 20% higher than the axis
STEPGEN_MAX_VEL =  22
STEPGEN_MAX_ACC =  58

BACKLASH = 0.000

# 4 microsteps 160, 8 microsteps 320, 2 microsteps 80
SCALE = 80 

MIN_LIMIT = 7.0
MAX_LIMIT = 482.0

FERROR = 0.01
MIN_FERROR = 0.001

HOME = 240
HOME_OFFSET = 240
HOME_IGNORE_LIMITS = NO
HOME_USE_INDEX = NO
HOME_SEQUENCE = 1
HOME_IS_SHARED = 0
VOLATILE_HOME = 0

# Set to zero if you don't have physical home/limit switches
# Set to the desired homing and latch velocity if you have switches
# See: http://linuxcnc.org/docs/html/config/ini-homing.html
#HOME_SEARCH_VEL = 15.5
HOME_SEARCH_VEL = 17
HOME_LATCH_VEL = -1.0

# these are in nanoseconds
# http://www.daycounter.com/Calculators/Inductor-Current-Power-Calculator.phtml
# @ 2.8A, 12mH, 49.8V
#DIRSETUP  = 337500
DIRSETUP   = 005000
#DIRHOLD   = 337500
DIRHOLD    = 005000
STEPLEN    = 337500
#STEPSPACE = 337500
STEPSPACE  = 002500

#-----------------------------------------------------------------------

# Z - Axis
[AXIS_2]

TYPE = LINEAR
#MAX_VELOCITY =     24
MAX_VELOCITY =     28
MAX_ACCELERATION = 48
# Set Stepgen max 20% higher than the axis
STEPGEN_MAX_VEL =  29
STEPGEN_MAX_ACC =  70

BACKLASH = 0.000

# scale is: (360/stepper_deg * num_microsteps) / mm_per_thread
#           (360°/1.8° * 4) / 5mm
# 4 microsteps 160, 8 microsteps 320, 2 microsteps 80
SCALE = -80

MIN_LIMIT = -101.0
MAX_LIMIT = 0.0

FERROR = 0.01
MIN_FERROR = 0.001

HOME = 0
HOME_OFFSET = -0.25
HOME_IGNORE_LIMITS = YES
HOME_USE_INDEX = NO
HOME_SEQUENCE = 0
HOME_IS_SHARED = 1
VOLATILE_HOME = 0

# Set to zero if you don't have physical home/limit switches
# Set to the desired homing and latch velocity if you have switches
# See: http://linuxcnc.org/docs/html/config/ini-homing.html
HOME_SEARCH_VEL = 16
HOME_LATCH_VEL = -1.0

# these are in nanoseconds
# http://www.daycounter.com/Calculators/Inductor-Current-Power-Calculator.phtml
#DIRSETUP  = 200000
DIRSETUP   = 005000
#DIRHOLD   = 200000
DIRHOLD    = 005000
STEPLEN    = 200000
#STEPSPACE = 200000
STEPSPACE  = 002500

#-----------------------------------------------------------------------

# The module within LinuxCNC that handles general purpose I/O, 
# unrelated to the actual motion of the axes
[EMCIO]

# Name of IO controller program, e.g., io
EMCIO = io

# The period, in seconds, at which EMCIO will run. 
# Making it 0.0 or a negative number will tell EMCIO not to sleep at all. 
# There is usually no need to change this number.
CYCLE_TIME = 0.100

# tool table file
TOOL_TABLE = tool.tbl

[HALUI]
# halui.mdi-command-00: safe-z (move Z to home position [AXIS_2]HOME)
MDI_COMMAND=G53 G0 Z0
# halui.mdi-command-01: machine-home (rapid move Z to [AXIS_2]HOME, then X and Y to home position [AXIS_0]HOME and [AXIS_1]HOME in G53)
MDI_COMMAND=o<go-machine-home> call [275] [240] [0]
# halui.mdi-command-02: probe-z and then touch off current coord. system
MDI_COMMAND=o<z-probe-touch-off> call [-10] [15]
# halui.mdi-command-03: probe-x
MDI_COMMAND=o<x-probe> call [-10] [15]
# halui.mdi-command-04: probe-y
MDI_COMMAND=o<y-probe> call [-10] [15]
# halui.mdi-command-05: workpiece-home (rapid move Z0 in G53, then X0, Y0 and finally Z0 in selected workpiece coordinate system)
MDI_COMMAND=o<go-workpiece-home> call [0] [0] [0] [0]
# halui.mdi-command-06
MDI_COMMAND=(debug, example: mdi-06)
# halui.mdi-command-07
MDI_COMMAND=(debug, example: mdi-07)
# halui.mdi-command-08
MDI_COMMAND=(debug, example: mdi-08)
# halui.mdi-command-09
MDI_COMMAND=(debug, example: mdi-09)
# halui.mdi-command-10
MDI_COMMAND=(debug, example: mdi-10)
# halui.mdi-command-11
MDI_COMMAND=(debug, example: mdi-11)
# halui.mdi-command-12
MDI_COMMAND=(debug, example: mdi-12)
# halui.mdi-command-13
MDI_COMMAND=(debug, example: mdi-13)
# halui.mdi-command-14
MDI_COMMAND=(debug, example: mdi-14)
# halui.mdi-command-15
MDI_COMMAND=(debug, example: mdi-15)
# halui.mdi-command-16
MDI_COMMAND=(debug, example: mdi-16)
