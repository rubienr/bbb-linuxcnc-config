[XHC_WHB04B_6_CONFIG]
# TODO: remove section
# specify layout = n for xhc-whb04b-6-layout{n}.cfg files
layout = 1
# coords: specify 4 letters
# coords: switch labels are xyza but any unique 4 letters
#         from the set {xyxabcuvw) can be used (if the coord exists)
coords = x y z
# lowpass settings:
# coef: slows rate of change of output,  range: 0 < coef < 1
coefs = 1 1 1
# scale plus or minus, rotaries may require larger scale factor:
scales = 1 -1 1
# jogmode normal(default) or vnormal or plus-minus
jogmode = normal
# sequence 1: 0.001,0.010,0.100,1.000 (mm-based machine)
# sequence 2: 0.001,0.005,0.010,0.020 (inch-based machine)
sequence = 1
# require_pendant = no: create xhc-whb04b-6 hal pins even if pendant is 
# not connecte at startup
# require_pendant = yes: create xhc-whb04b-6 hal wait for pendant at
# startup
require_pendant = yes
threadname = servo-thread

[XHC_WHB04B_6_BUTTONS]
# TODO: remvoe section
# use button names according to layout file xhc-whb04b-6-layout{n}.cfg
# note: "start-pause" is connected for standard behavior
#        controlling halui.pause/halui.resume/halui.run
# these are examples, edit as required:
RESET       = halui.estop.activate
STOP        = halui.program.stop
Start       = pendant_util.start-or-pause
STEP      = halui.program.step
Safe-z      = ""
#halui.mdi-command-01
# in this sim, home-all only works first time, hold down till finished:
M-HOME      = halui.home-all
#x2          = ""
#halui.mdi-command-02
#y2          = ""
#halui.mdi-command-03
# probe-input for simulating a probe:
#probe-z     = motion.probe-input
#x0          = ""
#halui.mdi-command-04
#y0          = ""
#halui.mdi-command-05
#z0          = ""
#halui.mdi-command-06
#goto-zero   = ""
#halui.mdi-command-00
#STEP        = xhc-whb04b-6.stepsize-up
#mode        = ""
#spindle     = ""



[PRUCONF]

DRIVER = hal_pru_generic
CONFIG = pru=0 num_stepgens=3 num_pwmgens=0
PRUBIN = xenomai/pru_generic.bin




[EMC]

# Name of machine, for use with display, etc.
MACHINE = Panther

# Debug level, 0 means no messages. See src/emc/nml_int/emcglb.h for others
#DEBUG =                0x00000003
#DEBUG =                0x00000007
DEBUG = 0



# http://linuxcnc.org/docs/2.4/html/config_ini_config.html
[DISPLAY]

# The name of the user interface to use. 
# Valid options may include: axis, touchy, gmoccapy, gscreen, keystick, mini, tklinuxcnc, xemc 
DISPLAY = axis

# Touchy currently won't work without some hardware buttons/jog-wheel
#DISPLAY = touchy

# Cycle time, in seconds, that display will sleep between polls
CYCLE_TIME = 0.200

# Path to help file
HELP_FILE = tklinucnc.txt

# Initial display setting for position, RELATIVE or MACHINE
#POSITION_OFFSET = RELATIVE
POSITION_OFFSET = MACHINE

# Initial display setting for position, COMMANDED or ACTUAL
#POSITION_FEEDBACK = ACTUAL
POSITION_FEEDBACK = ACTUAL

# Highest value that will be allowed for feed override, 1.0 = 100%
MAX_FEED_OVERRIDE = 1.5

# Prefix to be used
PROGRAM_PREFIX = ~/machinekit/configs/ARM.BeagleBone.Panther/nc_files/
#SUBROUTINE_PATH = ~/machinekit/configs/ARM.BeagleBone.Panther/nc_files/


# Introductory graphic
INTRO_GRAPHIC = machinekit.gif
INTRO_TIME = 12

# Increments for the jog section in machine units per second
INCREMENTS = 20 10 1 0.1 0.0125
# default jog velocity
DEFAULT_LINEAR_VELOCITY = 17.75
# min jog velocity
MIN_VELOCITY = 1
# max jog velocity
#MAX_LINEAR_VELOCITY = 31
MAX_LINEAR_VELOCITY = 17.75

#MIN_SPINDLE_OVERRIDE = 0.5
#MAX_SPINDLE_OVERRIDE = 1.5

PYVCP = 3D.Temps.panel.xml




[FILTER]

PROGRAM_EXTENSION = .png, .gif, .jpg Grayscale Depth Image
# PROGRAM_EXTENSION = .py Python Script
png = image-to-gcode
gif = image-to-gcode
jpg = image-to-gcode
py  = python



# http://linuxcnc.org/docs/2.4/html/config_ini_config.html
[TASK]
# Specifies the name of the "task" executable. "task" does various 
# things, such as communicate with the UIs over NML, communicate with 
# the realtime motion planner over non-HAL shared memory, and interpret 
# gcode. Currently there is only one task executable that makes sense 
# for 99.9% of users, milltask In the dim mists of time (before HAL), 
# it was frequently the case that an integrator would have to build a 
# modified version of things like task, io, and motion for a specific 
# machine.
TASK = milltask

# The period, in seconds, at which EMCTASK will run. 
# This parameter affects the polling interval when waiting for motion 
# to complete, when executing a pause instruction, and when accepting a 
# command from a user interface. There is usually no need to change this 
# number.
CYCLE_TIME = 0.010


[RS274NGC]
# File containing interpreter variables
PARAMETER_FILE = pru-stepper.var



# http://linuxcnc.org/docs/2.4/html/config_ini_config.html
# The module within LinuxCNC that handles the actual motion of the cutting tool.
# It runs as a real-time program and directly controls the motors.
[EMCMOT]

# The motion controller name is typically used here.
EMCMOT = motmod
# Timeout for comm to emcmot, in seconds
COMM_TIMEOUT = 1.0

# Interval between tries to emcmot, in seconds
COMM_WAIT = 0.010

# This is the Servo task period in nanoseconds. 
# This value will be rounded to an integer multiple of base_period_nsec. 
# This period is used even on systems based on stepper motors. 
SERVO_PERIOD = 1000000


[HAL]
# The run script first uses halcmd to execute any HALFILE
# files, and then to execute any individual HALCMD commands.

# list of hal config files to run through halcmd
# files are executed in the order in which they appear

# xhc jogdial script:
# load before *.hal file to provide jogdial signals beforehand
HALFILE = xhc-whb04b-6.tcl

HALFILE = Panther-3-axis.hal

# list of halcmd commands to execute
# commands are executed in the order in which they appear
#HALCMD =               save neta

POSTGUI_HALFILE = 3D.postgui.hal


#HALFILE = monitor_xhc-whb04b.6.tcl
HALUI =   halui


[TRAJ]

# One more than the number of the highest joint number in the system.
AXES = 3
# Number motors in the system.
JOINTS = 3
# Name of the axes.
COORDINATES = X Y Z

# The maximum velocity for angular jogs, in machine units per second.
MAX_ANGULAR_VELOCITY = 45.00
DEFAULT_ANGULAR_VELOCITY = 4.50

# Specifies the machine units for linear axes. Possible choices are 
# (in, inch, imperial, metric, mm). This does not affect the linear 
# units in NC code (the G20 and G21 words do this). 
LINEAR_UNITS = mm
# Specifies the machine units for rotational axes: deg, degree, rad, radian
ANGULAR_UNITS = degree
_
###CYCLE_TIME = 0.010

# The initial rate for jogs of linear axes, in machine units per second. 
# The value shown in Axis equals machine units per minute.
DEFAULT_VELOCITY = 18.5
# The maximum velocity for any axis or coordinated move, in machine units per second.
MAX_LINEAR_VELOCITY = 25

NO_FORCE_HOMING = 0


# http://wiki.linuxcnc.org/cgi-bin/wiki.pl?Stepper_Motor_Speed_Limitations

# X - Axis
[AXIS_0]

TYPE = LINEAR
TYPE = LINEAR
MAX_VELOCITY =     18.5
MAX_ACCELERATION = 50.0
# Set Stepgen max 20% higher than the axis
STEPGEN_MAX_VEL =  22.2
STEPGEN_MAX_ACC =  60.0

BACKLASH = 0.000

# 4 microsteps 160, 8 microsteps 320, 2 microsteps 80
SCALE = 80

MIN_LIMIT = 25.0
MAX_LIMIT = 535.0

FERROR = 0.01
MIN_FERROR = 0.001

HOME = 275
HOME_OFFSET = 275
HOME_IGNORE_LIMITS = NO
HOME_USE_INDEX = NO
HOME_SEQUENCE = 1
HOME_IS_SHARED = 0
VOLATILE_HOME = 0

# Set to zero if you don't have physical home/limit switches
# Set to the desired homing and latch velocity if you have switches
# See: https://github.com/machinekit/machinekit-docs
HOME_SEARCH_VEL = 17.5
HOME_LATCH_VEL = -1.0

# these are in nanoseconds
# http://www.daycounter.com/Calculators/Inductor-Current-Power-Calculator.phtml
# @ 2.8A, 12mH, 49.8V
DIRSETUP =  337500
DIRHOLD =   337500
STEPLEN =   337500
STEPSPACE = 337500




# Y - Axis
[AXIS_1]

TYPE = LINEAR
MAX_VELOCITY =     18.5
MAX_ACCELERATION = 50.0
# Set Stepgen max 20% higher than the axis
STEPGEN_MAX_VEL =  22.2
STEPGEN_MAX_ACC =  60.0

BACKLASH = 0.000

# 4 microsteps 160, 8 microsteps 320, 2 microsteps 80
SCALE = 80 

MIN_LIMIT = 7.0
MAX_LIMIT = 482.0

FERROR = 0.01
MIN_FERROR = 0.001

HOME = 240
HOME_OFFSET = 240
HOME_IGNORE_LIMITS = NO
HOME_USE_INDEX = NO
HOME_SEQUENCE = 1
HOME_IS_SHARED = 0
VOLATILE_HOME = 0

# Set to zero if you don't have physical home/limit switches
# Set to the desired homing and latch velocity if you have switches
# See: https://github.com/machinekit/machinekit-docs
HOME_SEARCH_VEL = 15.5
HOME_LATCH_VEL = -1.0

# these are in nanoseconds
# http://www.daycounter.com/Calculators/Inductor-Current-Power-Calculator.phtml
# @ 2.8A, 12mH, 49.8V
DIRSETUP =  337500
DIRHOLD =   337500
STEPLEN =   337500
STEPSPACE = 337500




# Z - Axis
[AXIS_2]

TYPE = LINEAR
MAX_VELOCITY =     25.0
MAX_ACCELERATION = 50.0
# Set Stepgen max 20% higher than the axis
STEPGEN_MAX_VEL =  31.25
STEPGEN_MAX_ACC =  60.0

BACKLASH = 0.000

# scale is: (360/stepper_deg * num_microsteps) / mm_per_thread
#           (360°/1.8° * 4) / 5mm
# 4 microsteps 160, 8 microsteps 320, 2 microsteps 80
SCALE = -80

MIN_LIMIT = -130.0
MAX_LIMIT = 0.0

FERROR = 0.01
MIN_FERROR = 0.001

HOME = 0
HOME_OFFSET = 0
HOME_IGNORE_LIMITS = YES
HOME_USE_INDEX = NO
HOME_SEQUENCE = 0
HOME_IS_SHARED = 1
VOLATILE_HOME = 0

# Set to zero if you don't have physical home/limit switches
# Set to the desired homing and latch velocity if you have switches
# See: https://github.com/machinekit/machinekit-docs
HOME_SEARCH_VEL = 15
HOME_LATCH_VEL = -1.0

# these are in nanoseconds
# http://www.daycounter.com/Calculators/Inductor-Current-Power-Calculator.phtml
DIRSETUP =  200000
DIRHOLD =   200000
STEPLEN =   200000
STEPSPACE = 200000



# The module within LinuxCNC that handles general purpose I/O, 
# unrelated to the actual motion of the axes
[EMCIO]

# Name of IO controller program, e.g., io
EMCIO = io

# The period, in seconds, at which EMCIO will run. 
# Making it 0.0 or a negative number will tell EMCIO not to sleep at all. 
# There is usually no need to change this number.
CYCLE_TIME = 0.100

# tool table file
TOOL_TABLE = tool.tbl

[HALUI]
# halui.mdi-command-00: safe-z (move Z to home position [AXIS_2]HOME)
MDI_COMMAND=G53 G0 Z0
# halui.mdi-command-01: machine-home (move Z to [AXIS_2]HOME, then X and Y to home position [AXIS_0]HOME and [AXIS_1]HOME)
MDI_COMMAND=G53 G0 X275 Y240 Z0
# halui.mdi-command-02: probe-z and then touch off current coord. system
MDI_COMMAND=o<z-probe-touch-off> call
# halui.mdi-command-03: probe-x
MDI_COMMAND=o<x-probe> call
# halui.mdi-command-04: probe-y
MDI_COMMAND=o<y-probe> call
# halui.mdi-command-05: workpiece-home (move X, Y, Z in G54 to X0 Y0 Z0)
MDI_COMMAND=G0 X0 Y0 Z0
# halui.mdi-command-06
MDI_COMMAND=(debug, example: mdi-06)
# halui.mdi-command-07
MDI_COMMAND=(debug, example: mdi-07)
# halui.mdi-command-08
MDI_COMMAND=(debug, example: mdi-08)
# halui.mdi-command-09
MDI_COMMAND=(debug, example: mdi-09)
# halui.mdi-command-10
MDI_COMMAND=(debug, example: mdi-10)
# halui.mdi-command-11
MDI_COMMAND=(debug, example: mdi-11)
# halui.mdi-command-12
MDI_COMMAND=(debug, example: mdi-12)
# halui.mdi-command-13
MDI_COMMAND=(debug, example: mdi-13)
# halui.mdi-command-14
MDI_COMMAND=(debug, example: mdi-14)
# halui.mdi-command-15
MDI_COMMAND=(debug, example: mdi-15)
# halui.mdi-command-16
MDI_COMMAND=(debug, example: mdi-16)
